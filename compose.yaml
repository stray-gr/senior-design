# Integration test between broker, local server, and database
# Steps: `docker-compose build && docker-compose up`

services:
  ##################################
  # Independently started services #
  ##################################
  broker:
    build: broker/
    ports:
      - "8885:8885"
    networks:
      - broker

  redis:
    image: redis:7-alpine3.21
    ports:
      - "6379:6379"
    networks:
      - redis

  sddb:
    build: database/
    command: postgres -c config_file=/etc/postgres.conf
    env_file:
      - ${PWD}/.env
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - database

  ################################
  # Dependently started services #
  ################################
  batch-router:
    build: 
      context: ${PWD}/batch-router
      dockerfile: Dockerfile
      target: main
    env_file:
      - ${PWD}/.env
    depends_on:
      - redis
    networks:
      - facility

  client:
    build: 
      context: ${PWD}/client
      dockerfile: Dockerfile
      target: main
    env_file:
      - ${PWD}/.env
    depends_on:
      - broker
    networks:
      - facility

  proxy:
    build:
      context: ${PWD}/proxy
      dockerfile: Dockerfile
      target: main
    env_file:
      - ${PWD}/.env
    depends_on:
      - broker
      - redis
    networks:
      - facility

  clock:
    build: 
      context: ${PWD}/clock
      dockerfile: Dockerfile
      target: main
    env_file:
      - ${PWD}/.env
    depends_on:
      - batch-router
      - client
      - proxy
    networks:
      - facility

networks:
  broker:
  redis:
  database:
  facility:

volumes: 
  db:
