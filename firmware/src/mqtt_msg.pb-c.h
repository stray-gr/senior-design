/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mqtt_msg.proto */

#ifndef PROTOBUF_C_mqtt_5fmsg_2eproto__INCLUDED
#define PROTOBUF_C_mqtt_5fmsg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct LWT LWT;
typedef struct Data Data;


/* --- enums --- */


/* --- messages --- */

struct  LWT
{
  ProtobufCMessage base;
  /*
   * Device username
   */
  char *device;
};
#define LWT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lwt__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Data
{
  ProtobufCMessage base;
  /*
   * Device username
   */
  char *device;
  /*
   * Temperature
   */
  int32_t temp;
  /*
   * Relative Humidity
   */
  float rh;
  /*
   * Unix Epoch (s)
   */
  uint32_t epoch;
};
#define DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0 }


/* LWT methods */
void   lwt__init
                     (LWT         *message);
size_t lwt__get_packed_size
                     (const LWT   *message);
size_t lwt__pack
                     (const LWT   *message,
                      uint8_t             *out);
size_t lwt__pack_to_buffer
                     (const LWT   *message,
                      ProtobufCBuffer     *buffer);
LWT *
       lwt__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lwt__free_unpacked
                     (LWT *message,
                      ProtobufCAllocator *allocator);
/* Data methods */
void   data__init
                     (Data         *message);
size_t data__get_packed_size
                     (const Data   *message);
size_t data__pack
                     (const Data   *message,
                      uint8_t             *out);
size_t data__pack_to_buffer
                     (const Data   *message,
                      ProtobufCBuffer     *buffer);
Data *
       data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data__free_unpacked
                     (Data *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LWT_Closure)
                 (const LWT *message,
                  void *closure_data);
typedef void (*Data_Closure)
                 (const Data *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor lwt__descriptor;
extern const ProtobufCMessageDescriptor data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mqtt_5fmsg_2eproto__INCLUDED */
